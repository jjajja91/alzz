<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
   <settings>
      <!-- Class에서 필드를 카멜케이스로 써도, DB에서는 스네이크 케이스로 변환 -->
      <setting name="mapUnderscoreToCamelCase" value="true"/>
   </settings>
</configuration>


<!--
   *** 기타 설정 참고 ***
    
   [defaultScriptingLanguage]   
   동적으로 SQL을 만들기 위해 기본적으로 사용하는 언어를 명시   타입별칭이나 패키지 경로를 포함한 클래스명   
   기본값 : org.apache.ibatis.scripting.xmltags.XMLLanguageDriver
   
   [defaultEnumTypeHandler]
   Enum에 기본적으로 사용되는 TypeHandler 를 지정합니다. (3.4.5 부터)
   타입별칭이나 패키지 경로를 포함한 클래스명
   기본값 : org.apache.ibatis.type.EnumTypeHandler
   
   [callSettersOnNulls]
   가져온 값이 null일때 setter나 맵의 put 메소드를 호출할지를 명시
   Map.keySet() 이나 null값을 초기화할때 유용하다.
   int, boolean 등과 같은 원시타입은 null을 설정할 수 없다는 점은 알아두면 좋다.
   기본값 : false
   
   [returnInstanceForEmptyRow]
   MyBatis 는 기본적으로 모든 열들의 행이 NULL 이 반환되었을 때 null을 반환한다. 
   이 설정을 사용하면 MyBatis가 대신 empty 인스턴스를 반환한다. 
   nested results(collection 또는 association) 에도 적용된다. 3.4.2 부터   
   기본값 : false
   
   [logPrefix]   
   마이바티스가 로거(logger) 이름에 추가할 접두사 문자열을 명시
   기본값 : 설정하지 않음
   
   [logImpl]
   마이바티스가 사용할 로깅 구현체를 명시.
   이 설정을 사용하지 않으면 마이바티스가 사용할 로깅 구현체를 자동으로 찾는다.
   SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING
   기본값 : 설정하지 않음
   
   [proxyFactory]
   마이바티스가 지연로딩을 처리할 객체를 생성할 때 사용할 프록시 툴을 명시   
   CGLIB | JAVASSIST   
   기본값 : JAVASSIST (마이바티스 3.3과 이상의 버전)
   
   [vfsImpl]
   VFS 구현체를 명시
   콤마를 사용해서 VFS구현체의 패키지를 포함한 전체 클래스명
   기본값 : 없음
   
   [useActualParamName]
   메소드 시그니처에 명시된 실제 이름으로 구문파라미터를 참조하는 것을 허용
   이 기능을 사용하려면 프로젝트를 자바 8의 -parameters옵션을 사용해서 컴파일해야만 한다.(마이바티스 3.4.1이상의 버전)   
   기본값 : true
   
   [configurationFactory]
   Configuration 인스턴스를 제공하는 클래스를 지정한다.
   반환된 Configuration 인스턴스는 역직렬화 된 객체의 지연로딩 속성들을 불러오는데 사용된다.
   이 클래스는 static Configuration getConfiguration() 메서드를 가져야 한다. (3.2.3 부터)
   기본값 : 설정하지 않음
   
   [shrinkWhitespacesInSql]
   SQL에서 여분의 whitespace 문자들을 삭제한다.
   이는 SQL의 리터럴 문자열에도 영향을 미친다. (Since 3.5.5)
   기본값 : false 
-->